version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 18, 16, 14.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 18-bullseye

    volumes:
      - ..:/workspace:cached
    environment:
      - NODE_ENV=development
    env_file:
      - ../.env

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    # Uncomment the next line to use a non-root user for all processes.
    user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 18, 16, 14.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 18-bullseye
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    env_file:
      - ../.env
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    # Uncomment the next line to use a non-root user for all processes.
    user: node
    ports:
      - 9000:9000

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: medusa
    ports:
      - 5432:5432
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - 6379:6379

  meilisearch:
    image: getmeili/meilisearch:latest
    restart: unless-stopped
    ports:
      - 7700:7700
    environment:
      - MEILI_MASTER_KEY=medusa
    volumes:
      - meilisearch-data:/meili_data
    command:
      - /bin/meilisearch
      - --env
      - development

  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - ADMINER_DEFAULT_SERVER=db

volumes:
  postgres-data: null
  meilisearch-data: null
  elasticsearch-data: null
